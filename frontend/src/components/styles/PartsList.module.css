/* Plik: src/components/styles/PartsList.module.css */

.partsListContainer {
    padding: 20px 0; /* Możesz dostosować, jeśli App.tsx ma już padding dla .mainContent */
}

.listTitle {
    font-size: 1.8rem;
    color: var(--primary-color);
    margin-bottom: 25px;
    text-align: center;
}

.noPartsMessage { /* Dodany styl dla komunikatu o braku części */
    text-align: center;
    font-size: 1.1rem;
    color: var(--text-light-color);
    padding: 20px;
    min-height: 100px; /* Aby nie skakał layout, gdy części znikną */
}

/* === NOWE STYLE DLA KONTROLEK === */
.controlsContainer {
    display: flex;
    justify-content: space-between; /* Rozkłada elementy na końcach */
    align-items: center;
    margin-bottom: 30px; /* Większy odstęp pod kontrolkami */
    padding: 20px;
    background-color: var(--surface-color); /* Jasne tło dla paska kontrolek */
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    flex-wrap: wrap; /* Zawijanie na mniejszych ekranach */
    gap: 20px; /* Odstęp między grupami kontrolek (wyszukiwarka vs sortowanie/limit) */
}

.searchInput {
    flex-grow: 1; /* Wyszukiwarka zajmuje dostępną przestrzeń */
    min-width: 250px; /* Minimalna szerokość */
    max-width: 400px; /* Opcjonalnie, maksymalna szerokość */
    /* Używa globalnej klasy .input-field, więc padding i inne są dziedziczone */
    /* Możesz dodać specyficzne nadpisania tutaj, jeśli potrzebne */
    /* np. margin-bottom: 0 !important; jeśli globalna klasa dodaje margines */
}

.sortAndLimit {
    display: flex;
    align-items: center;
    gap: 15px; /* Odstęp między selectami */
    flex-wrap: wrap; /* Zawijanie selectów na mniejszych ekranach */
}

.selectInput {
    /* Używa globalnej klasy .input-field */
    min-width: 180px; /* Minimalna szerokość dla czytelności */
    padding-right: 30px; /* Miejsce na strzałkę selecta */
    /* Możesz dodać specyficzne nadpisania tutaj */
}

/* === STYLE DLA PAGINACJI === */
.paginationContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 30px;
    padding: 15px;
    gap: 10px; /* Mniejszy odstęp dla przycisków paginacji */
    flex-wrap: wrap;
}

.paginationContainer button {
    /* Używa globalnej klasy .button-primary (lub innej, którą ustawiłeś w JSX) */
    padding: 8px 16px; /* Mniejszy padding */
    font-size: 0.9rem;
    min-width: 100px; /* Aby przyciski miały podobną szerokość */
}

.paginationContainer button:disabled {
    background-color: #e0e0e0; /* Jaśniejszy szary dla nieaktywnych */
    border-color: #e0e0e0;
    color: #9e9e9e; /* Ciemniejszy szary tekst */
    cursor: not-allowed;
}

.paginationContainer span {
    font-size: 0.95rem;
    color: var(--text-light-color);
    margin: 0 10px; /* Odstępy wokół tekstu strony */
}

/* === ISTNIEJĄCE STYLE DLA KART CZĘŚCI (bez zmian, chyba że chcesz dostosować) === */
.partsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 25px;
}

.partCard {
    background-color: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: 20px;
    box-shadow: var(--box-shadow);
    display: flex;
    flex-direction: column;
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.partCard:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
}

.partName {
    font-size: 1.3rem;
    font-weight: 500;
    color: var(--primary-color);
    margin-bottom: 10px;
    min-height: 2.6rem;
}

.partDescription {
    font-size: 0.9rem;
    color: var(--text-light-color);
    margin-bottom: 15px;
    flex-grow: 1;
    min-height: 40px;
    line-height: 1.4; /* Poprawiona czytelność dla wieloliniowych opisów */
}

.partDetails {
    margin-bottom: 15px;
    font-size: 0.95rem;
}

.partDetails p {
    margin-bottom: 5px;
}

.partPrice span {
    font-weight: bold;
    color: var(--success-color);
}

.partStockAvailable span {
    font-weight: bold;
    color: var(--success-color);
}

.partStockUnavailable span {
    font-weight: bold;
    color: var(--error-color);
}

.cardActions {
    display: flex;
    gap: 10px;
    margin-top: auto;
}

/* Klasa .actionButton była w JSX, ale nie była zdefiniowana, można ją usunąć z JSX lub dodać tu */
.actionButton {
    /* Przykładowe style, jeśli chcesz jej używać jako wspólnej klasy */
    /* np. border: none; */
}

.cardActions button { /* Ogólne style dla przycisków w karcie, jeśli nie mają specyficznych klas globalnych */
    flex-grow: 1;
    padding: 8px 12px;
    font-size: 0.9rem;
    /* Jeśli przyciski używają klas globalnych jak button-secondary, button-danger, te style mogą nie być potrzebne */
}

.editButton { /* Klasa specyficzna dla przycisku Edytuj */
    background-color: var(--accent-color) !important; /* Użyj !important jeśli globalne klasy nadpisują */
    color: var(--text-color) !important; /* Lub biały, jeśli akcent jest ciemny */
    border-color: var(--accent-color) !important;
}
.editButton:hover {
    background-color: #e0ac00 !important; /* Ciemniejszy odcień akcentu */
    border-color: #e0ac00 !important;
}

.errorText {
    text-align: center;
    color: var(--error-color); /* Upewnij się, że ta zmienna jest zdefiniowana w global.css */
    font-size: 1.1rem; /* Dopasuj rozmiar */
    padding: 10px;
}

/* Jeśli używasz globalnych klas dla przycisków, upewnij się, że są one odpowiednio ostylowane w global.css */
/* np. .button-primary, .button-secondary, .button-danger */