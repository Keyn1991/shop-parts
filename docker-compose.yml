# F:/PROJEKT SHOPPARTS/docker-compose.yml
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: parts-shop-backend
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - TYPEORM_SYNCHRONIZE=${TYPEORM_SYNCHRONIZE:-false}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - FRONTEND_URL=${FRONTEND_URL}
      - SWAGGER_API_DOCS_PATH=${SWAGGER_API_DOCS_PATH}
      # Opcjonalne zmienne dla Swaggera z main.ts
      # - SWAGGER_API_TITLE=${SWAGGER_API_TITLE}
      # - SWAGGER_API_DESC=${SWAGGER_API_DESC}
      # - SWAGGER_API_VERSION=${SWAGGER_API_VERSION}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args: # <<< DODANE: Przekazywanie argumentów do budowania obrazu frontendu
        # VITE_API_URL: http://localhost:3000 # Dla testów lokalnych, jeśli backend jest na tym porcie
        # Lub odczytaj z .env:
        VITE_API_URL: ${VITE_API_URL_FOR_COMPOSE:-http://localhost:3000}
    container_name: parts-shop-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: parts-shop-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "33061:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data: